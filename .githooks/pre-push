#!/bin/sh

echo "üîç Ejecutando validaci√≥n PHPDoc con PHPCS (solo l√≠neas modificadas)..."

# Obtener la rama actual
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
BASE_BRANCH="origin/$CURRENT_BRANCH"

# Flag de errores
ERROR=0

# Crear un directorio temporal para los diffs
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR"' EXIT

# Obtener archivos PHP modificados
FILES=$(git diff --cached --name-only "$BASE_BRANCH" | grep -E '\.php$')

# Si no hay archivos PHP modificados, no hacemos nada
if [ -z "$FILES" ]; then
  echo "‚úÖ No hay archivos PHP modificados para validar."
  exit 0
fi

for FILE in $FILES; do
  if [ -f "$FILE" ]; then
    echo "üìÇ Validando cambios en $FILE ..."

    # Crear un archivo diff para los cambios en este archivo
    git diff -U0 "$BASE_BRANCH" -- "$FILE" > "$TEMP_DIR/changes.diff"

    # Validar solo las l√≠neas modificadas usando phpcs con --diff
    vendor/bin/phpcs --standard=phpcs.xml --report=diff --diff="$TEMP_DIR/changes.diff" "$FILE"

    if [ $? -ne 0 ]; then
      ERROR=1
      echo "‚ùå Se encontraron problemas en $FILE"
    else
      echo "‚úÖ $FILE pas√≥ la validaci√≥n"
    fi
  else
    echo "‚ö†Ô∏è Archivo omitido (no existe): $FILE"
  fi
done

# Si hay errores, cancelar el push
if [ $ERROR -ne 0 ]; then
  echo "‚ùå Se encontraron errores en la documentaci√≥n PHPDoc. Corrige antes de hacer push."
  exit 1
fi

echo "‚úÖ Validaci√≥n exitosa. Continuando con el push."
exit 0