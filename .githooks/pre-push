#!/bin/bash
# ───────────────────────────────────────────────
# 🔍 VALIDACIÓN DE NOMBRE DE RAMA
# ───────────────────────────────────────────────
# Define los patrones permitidos
branch_regex="^(feature|hotfix|bugfix)\/(VSSUP|MARKECUA|SOPECUA|RISK|STI|GEP|VSFT|BUG|GEBD|GEC|GEP|GEPC|GEPD|GER)-[0-9]{3,5}$"
branch="^(feature|hotfix|bugfix)\/(VSSUP|MARKEKU|SOPECUA|RISK|STI|GEP|VSFT|BUG|GEBD|GEC|GEP|GEPC|GEPD|GER)-[0-9]{3,5}(-[a-zA-Z]+([A-Za-z0-9]+)*)?$"
allowed_branches="^(enviromentdev|enviromentdevintegrations|main)$"
# Obtiene el nombre de la rama actual
branch_name=$(git rev-parse --abbrev-ref HEAD)
# Verifica si el nombre de la rama coincide con alguno de los patrones permitidos
if [[ ! $branch_name =~ $branch_regex && ! $branch_name =~ $allowed_branches && ! $branch_name =~ $branch ]]; then
  echo "❌ Error: El nombre de la rama '$branch_name' no cumple con el formato requerido."
  echo "Formato requerido: [ramaTemporal]/[IDProyecto]-[CodigoWorkItem] o debe ser una de las ramas permitidas: environmentdev, environmentdevintegrations, main."
  echo "Ejemplo válido: feature/MARKECUA-1234"
  exit 1
fi
# ───────────────────────────────────────────────
# 📄 VALIDACIÓN DE DOCUMENTACIÓN PHPDOC
# ───────────────────────────────────────────────
echo "🔍 Ejecutando validación PHPDoc con PHPCS..."
# Obtener archivos PHP modificados (comparando contra el último commit en remoto)
FILES=$(git diff --cached --name-only origin/"$branch_name" | grep -E '\.php$')
# Si no hay archivos PHP modificados, no hacemos nada
if [ -z "$FILES" ]; then
  echo "✅ No hay archivos PHP modificados para validar."
  exit 0
fi
# Flag de errores
ERROR=0
# Verificar cada archivo PHP modificado que realmente exista
for FILE in $FILES; do
  if [ -f "$FILE" ]; then
    echo "📂 Validando $FILE ..."
    vendor/bin/phpcs --standard=phpcs.xml "$FILE"
    if [ $? -ne 0 ]; then
      ERROR=1
    fi
  else
    echo "⚠️ Archivo omitido (no existe): $FILE"
  fi
done
# Si hay errores, cancelar el push
if [ $ERROR -ne 0 ]; then
  echo "❌ Se encontraron errores en la documentación PHPDoc. Corrige antes de hacer push."
  exit 1
fi
echo "✅ Validación exitosa. Continuando con el push."
exit 0